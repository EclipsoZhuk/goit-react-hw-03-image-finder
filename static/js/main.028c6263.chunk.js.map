{"version":3,"sources":["services/PicturesApi.js","helpers/scrollPageDown.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["API_KEY","axios","defaults","baseURL","fetchPictures","query","a","page","get","hits","data","console","log","message","scrollPageDown","window","scrollTo","top","document","documentElement","scrollHeight","behavior","Searchbar","state","searchQuery","handleSearchQueryChange","e","setState","target","value","toLowerCase","handleSubmit","onSubmit","props","preventDefault","trim","toast","error","position","this","className","onChange","type","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","image","onOpenModal","onClick","src","webformatURL","alt","tags","ImageGallery","images","map","el","id","Button","modalRoot","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","currentTarget","addEventListener","removeEventListener","children","createPortal","App","loading","showModal","largeImage","fetchImages","then","prevState","handlerFormSubmit","handleOpenModal","toggleModal","handleOnLoadClick","catch","finally","hideLoaderInModal","prevProps","autoClose","color","height","width","length","largeImageURL","onLoad","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.028c6263.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '23121091-79cfae32e8a9d261b4a6138dc';\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\n\r\nconst fetchPictures = async (query, page = 1) => {\r\n    try {\r\n        const {\r\n            data: { hits },\r\n        } = await axios.get(\r\n            `?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n        );\r\n        return hits;\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport { fetchPictures };\r\n// https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\r\n","export default function scrollPageDown() {\r\n    window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n    });\r\n}\r\n","import { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Searchbar extends Component {\r\n    static propTypes = {\r\n        onSubmit: PropTypes.func.isRequired,\r\n    };\r\n\r\n    state = {\r\n        searchQuery: '',\r\n    };\r\n\r\n    handleSearchQueryChange = e => {\r\n        this.setState({ searchQuery: e.target.value.toLowerCase() });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        const { searchQuery } = this.state;\r\n        const { onSubmit } = this.props;\r\n\r\n        e.preventDefault();\r\n\r\n        if (searchQuery.trim() === '') {\r\n            return toast.error('Please,enter the correct request!', {\r\n                position: 'top-left',\r\n            });\r\n        }\r\n\r\n        onSubmit(searchQuery);\r\n        this.setState({ searchQuery: '' });\r\n    };\r\n\r\n    render() {\r\n        const { handleSearchQueryChange, handleSubmit } = this;\r\n        const { searchQuery } = this.state;\r\n\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n                    <input\r\n                        onChange={handleSearchQueryChange}\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        value={searchQuery}\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({ image, onOpenModal }) {\r\n    return (\r\n        <img\r\n            onClick={() => onOpenModal(image)}\r\n            src={image.webformatURL}\r\n            alt={image.tags}\r\n            className=\"ImageGalleryItem-image\"\r\n        />\r\n    );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    image: PropTypes.object.isRequired,\r\n    onOpenModal: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\n\r\nexport default function ImageGallery({ images, onOpenModal }) {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {images.map(el => (\r\n                <li className=\"ImageGalleryItem\" key={el.id}>\r\n                    <ImageGalleryItem image={el} onOpenModal={onOpenModal} />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n    onOpenModal: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Button({ onClick }) {\r\n    return (\r\n        <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n            Load more\r\n        </button>\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n    static propTypes = {\r\n        children: PropTypes.number.isRequired,\r\n        onClose: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { handleBackdropClick } = this;\r\n        const { children } = this.props;\r\n\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n                <div className=\"Modal\">{children}</div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { fetchPictures } from './services/PicturesApi';\nimport scrollPageDown from './helpers/scrollPageDown';\nimport Loader from 'react-loader-spinner';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n    state = {\n        searchQuery: '',\n        page: 1,\n        images: [],\n        loading: false,\n        showModal: false,\n        largeImage: {},\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        const { searchQuery } = this.state;\n\n        if (searchQuery !== prevState.searchQuery) {\n            this.fetchImages()\n                .catch(error => console.log(error))\n                .finally(() => this.setState({ loading: false }));\n        }\n    }\n\n    fetchImages = () => {\n        const { searchQuery, page } = this.state;\n\n        this.setState({ loading: true });\n\n        return fetchPictures(searchQuery, page).then(images => {\n            console.log(images);\n            this.setState(prevState => ({\n                images: [...prevState.images, ...images],\n                page: prevState.page + 1,\n            }));\n        });\n    };\n\n    handlerFormSubmit = searchQuery =>\n        this.setState({ searchQuery, page: 1, images: [] });\n\n    handleOpenModal = largeImage => {\n        this.setState({ largeImage });\n        this.toggleModal();\n    };\n\n    handleOnLoadClick = () => {\n        this.setState({ loading: true });\n        this.fetchImages()\n            .then(() => scrollPageDown())\n            .catch(error => console.log(error))\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    toggleModal = () =>\n        this.setState(({ showModal }) => ({ showModal: !showModal }));\n\n    hideLoaderInModal = () => this.setState({ loading: false });\n\n    render() {\n        const {\n            handlerFormSubmit,\n            handleOpenModal,\n            handleOnLoadClick,\n            toggleModal,\n            hideLoaderInModal,\n        } = this;\n        const { images, loading, showModal, largeImage } = this.state;\n\n        return (\n            <>\n                <ToastContainer autoClose={3000} />\n                <Searchbar onSubmit={handlerFormSubmit} />\n                {loading && (\n                    <Loader\n                        className=\"spinner\"\n                        type=\"Circles\"\n                        color=\"#00BFFF\"\n                        height={300}\n                        width={300}\n                    />\n                )}\n                {images.length !== 0 && (\n                    <ImageGallery\n                        images={images}\n                        onOpenModal={handleOpenModal}\n                    />\n                )}\n                {loading && !showModal && (\n                    <Loader\n                        className=\"spinner\"\n                        type=\"Circles\"\n                        color=\"#00BFFF\"\n                        height={300}\n                        width={300}\n                    />\n                )}\n\n                {!loading && images[0] && (\n                    <Button onClick={handleOnLoadClick} />\n                )}\n\n                {showModal && (\n                    <Modal onClose={toggleModal}>\n                        {loading && (\n                            <Loader\n                                className=\"spinner\"\n                                type=\"Circles\"\n                                color=\"#00BFFF\"\n                                height={300}\n                                width={300}\n                            />\n                        )}\n                        <img\n                            src={largeImage.largeImageURL}\n                            alt={largeImage.tags}\n                            onLoad={hideLoaderInModal}\n                        />\n                    </Modal>\n                )}\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}